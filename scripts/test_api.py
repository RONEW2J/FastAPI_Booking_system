import requests
import json
from datetime import datetime, timedelta

BASE_URL = "http://localhost:8000"

def test_booking_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "email": "test@example.com",
        "username": "testuser",
        "password": "testpass123"
    }
    
    response = requests.post(f"{BASE_URL}/auth/register", json=user_data)
    print(f"Status: {response.status_code}")
    if response.status_code == 200:
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")
        return
    
    print("\n2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    login_data = {
        "username": "testuser",
        "password": "testpass123"
    }
    
    response = requests.post(f"{BASE_URL}/auth/token", data=login_data)
    if response.status_code == 200:
        token = response.json()["access_token"]
        headers = {"Authorization": f"Bearer {token}"}
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return
    
    print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞...")
    resource_data = {
        "name": "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª –ê",
        "description": "–ó–∞–ª –¥–ª—è –≤—Å—Ç—Ä–µ—á –Ω–∞ 10 —á–µ–ª–æ–≤–µ–∫",
        "capacity": 10
    }
    
    response = requests.post(f"{BASE_URL}/resources/", json=resource_data, headers=headers)
    if response.status_code == 200:
        resource_id = response.json()["id"]
        print(f"‚úÖ –†–µ—Å—É—Ä—Å —Å–æ–∑–¥–∞–Ω —Å ID: {resource_id}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞: {response.text}")
        return
    
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
    response = requests.get(f"{BASE_URL}/resources/")
    if response.status_code == 200:
        resources = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {len(resources)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤: {response.text}")
    
    print("\n5. –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
    start_time = datetime.now() + timedelta(hours=2)
    end_time = start_time + timedelta(hours=1)
    
    booking_data = {
        "resource_id": resource_id,
        "start_time": start_time.isoformat(),
        "end_time": end_time.isoformat(),
        "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞"
    }
    
    response = requests.post(f"{BASE_URL}/bookings/", json=booking_data, headers=headers)
    if response.status_code == 200:
        booking_id = response.json()["id"]
        print(f"‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {booking_id}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {response.text}")
        return
    
    print("\n6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...")
    response = requests.get(f"{BASE_URL}/bookings/", headers=headers)
    if response.status_code == 200:
        bookings = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: {len(bookings)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: {response.text}")
    
    print("\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...")
    check_start = start_time + timedelta(minutes=30)
    check_end = check_start + timedelta(hours=1)
    
    params = {
        "start_time": check_start.isoformat(),
        "end_time": check_end.isoformat()
    }
    
    response = requests.get(f"{BASE_URL}/calendar/{resource_id}/availability", params=params)
    if response.status_code == 200:
        availability = response.json()
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞: {availability}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {response.text}")
    
    print("\n8. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
    calendar_start = datetime.now()
    calendar_end = calendar_start + timedelta(days=7)
    
    params = {
        "start_date": calendar_start.isoformat(),
        "end_date": calendar_end.isoformat()
    }
    
    response = requests.get(f"{BASE_URL}/calendar/{resource_id}", params=params)
    if response.status_code == 200:
        calendar_data = response.json()
        print(f"‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–ª—É—á–µ–Ω: {len(calendar_data['bookings'])} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {response.text}")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

if __name__ == "__main__":
    test_booking_system()